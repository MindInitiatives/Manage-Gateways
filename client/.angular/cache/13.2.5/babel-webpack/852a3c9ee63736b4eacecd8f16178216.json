{"ast":null,"code":"import _asyncToGenerator from \"/Users/stephenoloto/Desktop/Manage Gateways/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { BaseUrl } from '../baseurl';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let GatewayService = /*#__PURE__*/(() => {\n  class GatewayService extends BaseUrl {\n    constructor(http) {\n      super();\n      this.http = http;\n    }\n\n    createGateway(data) {\n      let headers = new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n      console.log(headers);\n      return this.http.post( // this.BASE_URL\n      '/', data, {\n        headers\n      }).pipe(map(response => {\n        return response;\n      }), catchError( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (error) {\n          return console.log(error);\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()));\n    }\n\n    getAllGateways() {\n      return this.http.get( // this.BASE_URL\n      '/', {\n        headers: new HttpHeaders({\n          'content-type': 'application/json'\n        })\n      });\n    }\n\n    getGatewayById(id) {\n      return this.http.get( // this.BASE_URL + \n      '/gateway?id=' + id, {\n        headers: new HttpHeaders({\n          'content-type': 'application/json'\n        })\n      });\n    }\n\n    updateGateway(gatewayData, id) {\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n      return this.http.put( // this.BASE_URL +\n      '/gateway?id=' + id, gatewayData, {\n        headers\n      }).pipe(tap(updatedGatewayDetail => console.log(`updated gateway detail = ${JSON.stringify(updatedGatewayDetail)}`)), catchError( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(function* (error) {\n          return console.log(error);\n        });\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }()));\n    }\n\n    deleteGateway(id) {\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n      console.log(headers);\n      return this.http.delete( // this.BASE_URL +\n      '/gateway?id=' + id, {\n        headers\n      });\n    }\n\n    deleteGatewayDevice(id, deviceId) {\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n      console.log(headers);\n      return this.http.delete( // this.BASE_URL +\n      '/gateway/device?id=' + id + '&uid=' + deviceId, {\n        headers\n      });\n    }\n\n  }\n\n  GatewayService.ɵfac = function GatewayService_Factory(t) {\n    return new (t || GatewayService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  GatewayService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GatewayService,\n    factory: GatewayService.ɵfac,\n    providedIn: 'root'\n  });\n  return GatewayService;\n})();","map":null,"metadata":{},"sourceType":"module"}