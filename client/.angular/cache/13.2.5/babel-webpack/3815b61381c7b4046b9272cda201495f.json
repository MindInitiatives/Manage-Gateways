{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/gateway.service\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"@angular/common\";\n\nfunction EditGatewayComponent_div_28_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const status_r5 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", status_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(status_r5);\n  }\n}\n\nfunction EditGatewayComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"div\", 11);\n    i0.ɵɵelement(2, \"input\", 24);\n    i0.ɵɵelementStart(3, \"label\", 25);\n    i0.ɵɵtext(4, \"Vendor\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 11)(6, \"select\", 26);\n    i0.ɵɵlistener(\"change\", function EditGatewayComponent_div_28_Template_select_change_6_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.selectStatus($event);\n    });\n    i0.ɵɵelementStart(7, \"option\", 27);\n    i0.ɵɵtext(8, \"Select Option\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, EditGatewayComponent_div_28_option_9_Template, 2, 2, \"option\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"label\", 29);\n    i0.ɵɵtext(11, \"Status\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function EditGatewayComponent_div_28_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const i_r3 = restoredCtx.index;\n      const peripheralItem_r2 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.remove(i_r3, peripheralItem_r2);\n    });\n    i0.ɵɵtext(13, \" Remove\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const i_r3 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroupName\", i_r3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"id\", \"vendor\" + i_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", \"vendor\" + i_r3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngValue\", null);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.deviceStatus);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.loading);\n  }\n}\n\nfunction EditGatewayComponent_i_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 32);\n  }\n}\n\nconst _c0 = function () {\n  return [\"/all-gateways\"];\n};\n\nexport let EditGatewayComponent = /*#__PURE__*/(() => {\n  class EditGatewayComponent {\n    constructor(fb, route, gatewayService, _snackBar) {\n      this.fb = fb;\n      this.route = route;\n      this.gatewayService = gatewayService;\n      this._snackBar = _snackBar;\n      this.loading = false;\n      this.disabled = false;\n      this.deviceStatus = ['online', 'offline'];\n      this.form = this.fb.group({\n        gateway_name: ['', [Validators.required]],\n        IPV4_address: ['', [Validators.required]],\n        peripheral_devices: this.fb.array([])\n      });\n    }\n\n    get peripheral_devices() {\n      return this.form.get('peripheral_devices');\n    }\n\n    ngOnDestroy() {\n      this.sub.unsubscribe();\n    }\n\n    ngOnInit() {\n      if (this.route.snapshot.queryParams['id']) {\n        this.sub = this.route.queryParamMap.subscribe(params => {\n          console.log(params);\n          this.id = params.params.id;\n          this.getDetails(this.id);\n        });\n      }\n    }\n\n    getDetails(id) {\n      this.gatewayService.getGatewayById(id).subscribe(res => {\n        console.log(res);\n        this.gatewayData = res;\n        this.form.controls['gateway_name'].setValue(this.gatewayData.gateway_name);\n        this.form.controls['IPV4_address'].setValue(this.gatewayData.IPV4_address);\n        this.gatewayData.peripheral_devices.forEach(e => {\n          this.peripheral_devices.push(this.fb.group({\n            vendor: [e.vendor, [Validators.required]],\n            status: [e.status, [Validators.required]]\n          }));\n        });\n      });\n    }\n\n    selectStatus(evt) {\n      this.status = evt.target.value;\n    }\n\n    add() {\n      this.peripheral_devices.push(this.fb.group({\n        vendor: ['', [Validators.required]],\n        status: ['', [Validators.required]]\n      }));\n    }\n\n    remove(i, device) {\n      console.log(device);\n      this.gatewayService.deleteGatewayDevice(this.id, device.uid).subscribe(res => {\n        console.log(res);\n\n        if (res.statusCode == 200) {\n          const index = this.gatewayData.peripheral_devices.indexOf(device.uid);\n          console.log(index);\n          this.peripheral_devices.removeAt(i);\n          this.openSnackBar(res.statusMessage, \"close\");\n          console.log(this.gatewayData.peripheral_devices);\n        }\n      });\n    }\n\n    openSnackBar(message, action) {\n      this._snackBar.open(message, action, {\n        duration: 1000\n      });\n    }\n\n    submitForm(f) {\n      console.log(f);\n      this.loading = true;\n\n      if (f.valid) {\n        this.gatewayService.updateGateway(f.value, this.id).subscribe(res => {\n          console.log(res);\n\n          if (res.statusCode == 200) {\n            this.loading = false;\n            this.openSnackBar(res.statusMessage, \"close\");\n          }\n        });\n      } else {\n        this.loading = false;\n      }\n    }\n\n  }\n\n  EditGatewayComponent.ɵfac = function EditGatewayComponent_Factory(t) {\n    return new (t || EditGatewayComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.GatewayService), i0.ɵɵdirectiveInject(i4.MatSnackBar));\n  };\n\n  EditGatewayComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditGatewayComponent,\n    selectors: [[\"app-edit-gateway\"]],\n    decls: 36,\n    vars: 7,\n    consts: [[1, \"ex-header\"], [1, \"container\"], [1, \"row\"], [1, \"col-xl-10\", \"offset-xl-1\"], [1, \"text-center\"], [1, \"ex-form-1\", \"pt-5\", \"pb-5\"], [1, \"col-xl-6\", \"offset-xl-3\"], [1, \"text-box\", \"mt-5\", \"mb-5\"], [1, \"mb-4\"], [1, \"blue\", 3, \"routerLink\"], [3, \"formGroup\"], [1, \"mb-4\", \"form-floating\"], [\"formControlName\", \"gateway_name\", \"name\", \"name\", \"type\", \"text\", \"id\", \"floatingInput1\", \"placeholder\", \"\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"floatingInput\"], [\"formControlName\", \"IPV4_address\", \"name\", \"address\", \"type\", \"text\", \"id\", \"floatingInput2\", \"placeholder\", \"\", \"required\", \"\", 1, \"form-control\"], [1, \"peripheral-section\"], [\"formArrayName\", \"peripheral_devices\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-button\", \"text-end\"], [1, \"btn\", \"btn-outline-sm\", 3, \"disabled\", \"click\"], [1, \"fa\", \"fa-plus\"], [\"type\", \"submit\", 1, \"form-control-submit-button\", \"my-5\", 3, \"disabled\", \"click\"], [\"class\", \"fa fa-spinner fa-spin\", 4, \"ngIf\"], [3, \"formGroupName\"], [\"formControlName\", \"vendor\", \"name\", \"vendor\", \"type\", \"text\", \"placeholder\", \"\", \"required\", \"\", 1, \"form-control\", 3, \"id\"], [3, \"for\"], [\"formControlName\", \"status\", \"name\", \"status\", \"required\", \"\", 1, \"form-control\", 3, \"change\"], [3, \"ngValue\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"floatingPassword\"], [1, \"btn\", \"btn-solid-sm\", \"mb-4\", 3, \"disabled\", \"click\"], [3, \"value\"], [1, \"fa\", \"fa-spinner\", \"fa-spin\"]],\n    template: function EditGatewayComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"header\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h1\", 4);\n        i0.ɵɵtext(5, \"Edit Gateway\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 1)(8, \"div\", 2)(9, \"div\", 6)(10, \"div\", 7)(11, \"p\", 8);\n        i0.ɵɵtext(12, \"Finished Editing? Click Here to \");\n        i0.ɵɵelementStart(13, \"a\", 9);\n        i0.ɵɵtext(14, \"go back\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"form\", 10)(16, \"div\", 11);\n        i0.ɵɵelement(17, \"input\", 12);\n        i0.ɵɵelementStart(18, \"label\", 13);\n        i0.ɵɵtext(19, \"Gateway name\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"div\", 11);\n        i0.ɵɵelement(21, \"input\", 14);\n        i0.ɵɵelementStart(22, \"label\", 13);\n        i0.ɵɵtext(23, \"IPV4 Address\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"div\", 15)(25, \"p\", 8);\n        i0.ɵɵtext(26, \"Peripherals\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementContainerStart(27, 16);\n        i0.ɵɵtemplate(28, EditGatewayComponent_div_28_Template, 14, 6, \"div\", 17);\n        i0.ɵɵelementStart(29, \"div\", 18)(30, \"button\", 19);\n        i0.ɵɵlistener(\"click\", function EditGatewayComponent_Template_button_click_30_listener() {\n          return ctx.add();\n        });\n        i0.ɵɵelement(31, \"span\", 20);\n        i0.ɵɵtext(32, \" Add New Device \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"button\", 21);\n        i0.ɵɵlistener(\"click\", function EditGatewayComponent_Template_button_click_33_listener() {\n          return ctx.submitForm(ctx.form);\n        });\n        i0.ɵɵtext(34, \"Submit \");\n        i0.ɵɵtemplate(35, EditGatewayComponent_i_35_Template, 1, 0, \"i\", 22);\n        i0.ɵɵelementEnd()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(6, _c0));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngForOf\", ctx.peripheral_devices.controls);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    directives: [i2.RouterLinkWithHref, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i1.FormArrayName, i5.NgForOf, i1.FormGroupName, i1.SelectControlValueAccessor, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i5.NgIf],\n    styles: [\"\"]\n  });\n  return EditGatewayComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}